name: Release
on:
  push:
    branches:
      - "main"
  workflow_dispatch:

env:
  # The release + deployment will be done on "prod" stage if on main branch, on "dev" stage otherwise
  STAGE: ${{ github.ref_name == 'main' && 'prod' || 'dev' }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: 🧑‍💼 Setup pnpm
        uses: pnpm/action-setup@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          cache: pnpm
          node-version-file: ".node-version"

      # *pnpm* uses *npm* under the hood for publishing.
      # For publishing securely the latest npm version should always be used.
      - name: Keep npm up-to-date
        run: npm install -g npm@latest
        shell: bash

      - name: 🤖 Configure Git Bot
        run: |
          git config user.name "Release Bot[bot]"
          git config user.email "bot@example.com"

      - name: Version
        run: |
          set -ex

          pnpm i
          pnpm exec changeset version ${{ github.ref_name == 'main' && '--snapshot' || '' }}

      - name: Publish
        uses: changesets/action@v1
        with:
          publish: pnpm exec changeset publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      #- name: 📸 Snapshot and Publish
      #  run: |
      #    # [Snapshot release fails if repository is in pre-release mode](https://github.com/changesets/changesets/issues/1195)
      #    rm -f .changeset/pre.json
      #    # Add empty changeset so we always have a new snapshot release for each new run
      #    pnpm exec changeset add --empty
      #    pnpm exec changeset version --snapshot
      #    pnpm exec changeset publish --tag snapshot
